# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  packer_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        name: Checkout
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: django-app #${{ secrets.REPO_NAME }}
          IMAGE_TAG: "dev-${{ github.sha }}"
        working-directory: ./web 
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Update deployment secrets
        run: |
          cat << EOF >> web/.env.prod
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUERPUSER_EMAIL=${{ secrets.DJANGO_SUERPUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          EOF
          cat web/.env.prod
          aws eks update-kubeconfig --name bankapp --region us-east-2
          kubectl delete secret django-k8-web-prod-env
          kubectl create secret generic django-k8-web-prod-env --from-env-file=web/.env.prod
      - name: Deploy
        run: |
          echo "dev-${{ github.sha }}" 
          sed -i "s/##IMAGE_TAG##/dev-${{ github.sha }}/" k8s/apps/django-k8s-web.yaml
          kubectl apply -f k8s/apps/django-k8s-web.yaml
      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/django-k8-web-deployment
      - name: Post-build Django Commands - Migrate / Collectstatic
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=django-k8-web-deployment -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/collectstatic.sh
